#:import Window kivy.core.window.Window

<KiventGame>:
    gameworld: gameworld
    GameWorld:
        id: gameworld
        gamescreenmanager: gamescreenmanager
        PositionSystem:
            system_id: 'position'
            gameworld: gameworld
        RotateSystem:
            system_id: 'rotate'
            gameworld: gameworld
        ColorSystem:
            system_id: 'color'
            gameworld: gameworld
        GameView:
            focus_entity: False
            system_id: 'gameview'
            updateable: False
            gameworld: gameworld
            pos: root.pos
            do_scroll: False
            size: root.size
        InputSystem:
            system_id: 'input'
            gameworld: gameworld
        PlayerSystem:
            system_id: 'player'
            gameworld: gameworld
        WallSystem:
            system_id: 'wall'
            gameworld: gameworld
            canvas:
                Color:
                    rgba: 0, 0, 1, self.building
                Line:
                    points:
                        [self.prelim_start[0],
                        self.prelim_start[1],
                        self.prelim_end[0],
                        self.prelim_end[1]]
                    width: 2
        ShieldSystem:
            system_id: 'shield'
            gameworld: gameworld
            renderer: 'physics_color_renderer'
        FireSystem:
            system_id: 'fire'
            gameworld: gameworld
            renderer: 'colour_renderer'
        EarthShieldSystem:
            system_id: 'earth_shield'
            gameworld: gameworld
            new_shield_dist: 50
            renderer: 'physics_color_renderer'
        AirShieldSystem:
            system_id: 'air_shield'
            gameworld: gameworld
            renderer: 'colour_renderer'
        FireShieldSystem:
            system_id: 'fire_shield'
            gameworld: gameworld
            colour: 1, 0, 0, 1
            renderer: 'colour_renderer'
        WaterShieldSystem:
            system_id: 'water_shield'
            gameworld: gameworld
            colour: 0, 0.1, 1, 1
            renderer: 'colour_renderer'
        TimingSystem:
            system_id: 'timing'
            gameworld: gameworld
        MyProjectileSystem:
            system_id: 'projectile'
            gameworld: gameworld
        EarthProjectileSystem:
            system_id: 'earth_projectile'
            gameworld: gameworld
        AirProjectileSystem:
            system_id: 'air_projectile'
            gameworld: gameworld
        FireProjectileSystem:
            system_id: 'fire_projectile'
            gameworld: gameworld
        WaterProjectileSystem:
            system_id: 'water_projectile'
            gameworld: gameworld
        EditSystem:
            system_id: 'edit'
            gameworld: gameworld
        GameMap:
            system_id: 'map'
            map_size: root.size
            gameworld: gameworld
        QuadRendererNoTextures:
            gameworld: gameworld
            system_id: 'debug_renderer'
            shader_source: 'assets/glsl/positionrotateshader.glsl'
        DynamicRenderer:
            gameworld: gameworld
            system_id: 'physics_color_renderer'
            do_color: True
            shader_source: 'assets/glsl/positionrotatecolorshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'images_atlas'
            physics_system: 'physics'
        DynamicRenderer:
            gameworld: gameworld
            system_id: 'physics_renderer'
            shader_source: 'assets/glsl/positionrotateshader.glsl'
            atlas_dir: 'assets/'
            atlas: 'images_atlas'
            physics_system: 'physics'
        TimeDynamicRenderer:
            gameworld: gameworld
            system_id: 'colour_renderer'
            shader_source: 'assets/glsl/fire.glsl'
            do_rotate: True
            do_color: True
            atlas_dir: 'assets/'
            atlas: 'images_atlas'
            physics_system: 'physics'
        Renderer:
            gameworld: gameworld
            system_id: 'grid_renderer'
            shader_source: 'assets/glsl/trivial.glsl'
            atlas_dir: 'assets/'
            atlas: 'images_atlas'
            do_rotate: False
        CymunkPhysics:
            gameworld: root.gameworld
            system_id: 'physics'
            viewport: 'gameview'
            damping: 0.25
    GameScreenManager:
        id: gamescreenmanager
        size: root.size
        pos: root.pos
        gameworld: gameworld
        current: 'main'
        InterfaceScreen:
            id: interface_screen
            gameworld: root.gameworld

<InterfaceScreen@GameScreen>:
    gameworld: None
    name: 'main'
    LevelInterface:
        gameworld: root.gameworld

<ImageButton>:
    allow_stretch: True
    keep_ratio: False

<ElementPicker>:
    size_hint: None, 1
    width: self.height
    orientation: 'vertical'
    ImageButton:
        source: root.projectile_image
        on_press: root.parent.parent.projectile_element = root.element
        opacity: 1 if root.projectile_active else 0.2
    ImageButton:
        source: root.shield_image
        on_press: root.parent.parent.shield_element = root.element
        opacity: 1 if root.shield_active else 0.2

<LevelInterface>:
    element_pickers: {'earth': earth, 'air': air, 'fire': fire, 'water': water}
    BoxLayout:
        pos_hint: {'x': 0, 'y': 0}
        size_hint: 1, None
        height: sp(70)
        Widget:
        ElementPicker:
            id: earth
            element: 'earth'
            projectile_image: 'atlas://assets/images_atlas/earthball'
            shield_image: 'atlas://assets/images_atlas/earthball'
        ElementPicker:
            id: air
            element: 'air'
            projectile_image: 'atlas://assets/images_atlas/airball'
            shield_image: 'atlas://assets/images_atlas/airball'
        ElementPicker:
            id: fire
            element: 'fire'
            projectile_image: 'atlas://assets/images_atlas/fireball'
            shield_image: 'atlas://assets/images_atlas/fireball'
        ElementPicker:
            id: water
            element: 'water'
            projectile_image: 'atlas://assets/images_atlas/waterball'
            shield_image: 'atlas://assets/images_atlas/waterball'


<EditInterface>:
    size_hint_y: None
    height: sp(100)
    pos_hint: {'x': 0, 'y': float(self.y_shift) * (Window.height - self.height) / float(Window.height)}
    visible: self.parent is not None
    BoxLayout:
        orientation: 'vertical'
        size_hint_x: None
        width: sp(80)
        Spinner:
            text: 'walls'
            values: ['walls', 'add entity', 'manipulate']
            on_text: root.mode = self.text
        Button:
            text: 'flip'
            on_press: root.top = not root.top
    
    Image:
        source: 'colours.png'
        allow_stretch: True
        keep_ratio: False